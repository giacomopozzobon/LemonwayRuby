# ************
# https://documentation.lemonway.com/reference/p2ps_p2pget
#
# Search for transactions between payment accounts.
#
# @param hash [Hash] The search parameters.
#   - :transactionId [Integer] The transaction ID to search for.
#   - :transactionComment [String] The transaction comment to filter by.
#   - :reference [String] The unique reference ID generated by your server.
#   - :privateData_value [Array<String>] Optional array of private data values to filter by.
#   - :page [Integer] The page number to start from (default: 1).
#   - :limit [Integer] The number of results per page (default: 20).
#
# @return [Hash] The response containing the list of matching transactions.
# ************

module LemonwayRuby
  module P2P
    extend Helpers

    class << self
      def search(hash = {})
        optional_keys = %i[transactionId transactionComment reference privateData_value page limit]
        params = ensure_keys(hash, [], optional_keys)

        # Add privateData_value as a comma-separated string if it's an array
        if params[:privateData_value].is_a?(Array)
          params[:privateData_value] = params[:privateData_value].join(',')
        end

        # Handle pagination (page and limit)
        params[:page] ||= 1
        params[:limit] ||= 20

        LemonwayRuby.post(generate_uri, params)
      end
    end
  end
end
